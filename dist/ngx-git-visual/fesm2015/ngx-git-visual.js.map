{"version":3,"file":"ngx-git-visual.js","sources":["../../../projects/ngx-git-visual/src/lib/base-classes/a-base-component.ts","../../../projects/ngx-git-visual/src/lib/input/input.component.ts","../../../projects/ngx-git-visual/src/lib/input/input.component.html","../../../projects/ngx-git-visual/src/lib/input/input.module.ts","../../../projects/ngx-git-visual/src/public-api.ts","../../../projects/ngx-git-visual/src/ngx-git-visual.ts"],"sourcesContent":["import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  Injector,\r\n  Input,\r\n  ɵsetCurrentInjector as setCurrentInjector\r\n} from '@angular/core';\r\nimport { ControlContainer, FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Directive()\r\nexport abstract class BaseUiFormDirective {\r\n  @Input() public label: string | null = null;\r\n  @Input() public id: string | null = null;\r\n  @Input() public tooltip: string | null = null;\r\n  // TODO: убрать INPUT. у NG_VALUE_ACCESSOR (директивы formControlName) есть поле disabled\r\n  // Для форм юзать alDisabled=\"true/false\"\r\n  public disabled = false;\r\n  @Input() public isVisible = true;\r\n  @Input() public position: string | null = null;\r\n  @Input() public isRequired = false;\r\n  @Input() public classes: string[] = [];\r\n  @Input() public style: object = {};\r\n  @Input() public placeholder = '';\r\n  // TODO: зачем INPUT ? Убрать и использовать ngModel. Реализация ControlValueAccessor позволяет.\r\n  @Input() public value: any;\r\n\r\n  // Содержит formControlName\r\n  protected formControlName: string | null = null;\r\n  // Содержит ElementRef компонента\r\n  protected elementRef: ElementRef | null = null;\r\n  // Содержит ControlContainer компонента\r\n  protected controlContainer: ControlContainer | null = null;\r\n  // Содержит  ChangeDetectorRef\r\n  protected changeDetectorRef: ChangeDetectorRef | null = null;\r\n  // Получает главную форму\r\n  get form(): FormGroup {\r\n    return this.controlContainer?.control as FormGroup;\r\n  }\r\n  // Получает текущий контрол\r\n  get control(): FormControl {\r\n    return this.form?.get(this.formControlName!) as FormControl;\r\n  }\r\n  // True если компонент был \"тронут\"\r\n  protected touched = false;\r\n\r\n  constructor(injector: Injector) {\r\n    this.getTokensFormDI(injector);\r\n  }\r\n\r\n  // callback-функция если значение поменяли\r\n  protected onChange = (value: any) => {};\r\n  // callback-функция если элемент тронули\r\n  protected onTouched = () => {};\r\n\r\n  protected onInit(): void {\r\n    this.formControlName =\r\n      this.elementRef?.nativeElement?.attributes?.formcontrolname?.textContent;\r\n    // Если ил не указан явно забираю из названия formNameControl\r\n    this.id =\r\n      this.id ??\r\n      this.elementRef?.nativeElement?.attributes?.formcontrolname?.textContent;\r\n    //  ?? console.error('Для элемента не указан formControlName');\r\n\r\n    // Забираю isRequred из валидации контрола(главный) или из явно указанного (второстепенный). False по дефолту\r\n    this.isRequired = this.control?.validator\r\n      ? // ? this.control.validator(this.control)?.hasOwnProperty('required')\r\n        (this.control\r\n          ?.validator('' as any)\r\n          ?.hasOwnProperty('required') as boolean)\r\n      : this.isRequired;\r\n  }\r\n\r\n  // сохраняю callback-функцию если значение поменяли\r\n  public registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  // сохраняю callback-функцию если элемент тронули\r\n  public registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  // устанавлтвает свойство isDisabled\r\n  public setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  // записывает новаое значение\r\n  public writeValue(outsideValue: any): void {\r\n    this.updateValue(outsideValue, false);\r\n  }\r\n\r\n  protected markAsTouched(): void {\r\n    if (!this.touched) {\r\n      this.onTouched();\r\n      this.touched = true;\r\n      this.changeDetectorRef!.detectChanges();\r\n    }\r\n  }\r\n\r\n  // забираю с инжектора нужные токены\r\n  private getTokensFormDI(injector: Injector): void {\r\n    const former = setCurrentInjector(injector);\r\n\r\n    this.elementRef = injector.get(ElementRef, null);\r\n    this.controlContainer = injector.get(ControlContainer, null);\r\n    this.changeDetectorRef = injector.get(ChangeDetectorRef, null);\r\n\r\n    setCurrentInjector(former);\r\n  }\r\n\r\n  // Метод, обновляющий значение\r\n  public abstract updateValue(event: any, markAsTouched: boolean): void;\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Injector,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { BaseUiFormDirective } from '../base-classes/a-base-component';\r\n\r\n@Component({\r\n  selector: 'ngx-git-input',\r\n  templateUrl: './input.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      multi: true,\r\n      useExisting: forwardRef(() => InputComponent),\r\n    },\r\n  ],\r\n})\r\nexport class InputComponent\r\n  extends BaseUiFormDirective\r\n  implements OnInit, ControlValueAccessor\r\n{\r\n  @Input() public type: string = 'text';\r\n  @Input() public maxWidth = false;\r\n  // TODO: реализовать верно в html\r\n  @Input() public pattern: string | null = null;\r\n  @Input() public min = 0;\r\n  @Input() public max: number | null = null;\r\n  @Input() public labelTextPosition: 'left' | 'right' | 'none' = 'left';\r\n  @Input() public labelPosition: 'top' | 'left' | 'none' = 'top';\r\n\r\n  // TODO: сделать!!!\r\n  inputFilterStream$: Subject<any> = new Subject<any>();\r\n\r\n  @Output() public onInput: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  public constructor(injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.onInit();\r\n  }\r\n\r\n  public updateValue(insideValue: any, markAsTouched: boolean = true): void {\r\n    if (markAsTouched) {\r\n      this.markAsTouched();\r\n    }\r\n    if (!this.disabled) {\r\n      if (this.type === 'number') {\r\n        this.value = +insideValue;\r\n      } else {\r\n        this.value = insideValue;\r\n      }\r\n      // this.onInput.emit(insideValue);\r\n      this.onChange(this.value);\r\n    }\r\n  }\r\n}\r\n","<div\r\n  [className]=\"\r\n    labelPosition == 'left' ? 'inputBox input_row' : 'inputBox input_col'\r\n  \"\r\n  *ngIf=\"isVisible\"\r\n  [style]=\"labelPosition === 'top' ? 'margin-top: 5px' : ''\"\r\n>\r\n  <label\r\n    *ngIf=\"label || labelPosition !== 'none'\"\r\n    [for]=\"id\"\r\n    [style]=\"\r\n      labelTextPosition == 'right'\r\n        ? 'text-align: right'\r\n        : 'text-align: left' && maxWidth\r\n        ? 'flex: inherit'\r\n        : 'width: 100%'\r\n    \"\r\n    >{{ label }}<i class=\"sup2\" *ngIf=\"isRequired\">*</i></label\r\n  >\r\n  <input\r\n    [id]=\"id\"\r\n    [attr.type]=\"type\"\r\n    pInputText\r\n    (input)=\"updateValue(inp.value)\"\r\n    [attr.min]=\"min\"\r\n    [attr.max]=\"max\"\r\n    [attr.pattern]=\"pattern\"\r\n    [(ngModel)]=\"value\"\r\n    [attr.disabled]=\"disabled ? '' : null\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"style\"\r\n    [attr.placeholder]=\"placeholder\"\r\n    [style]=\"maxWidth ? 'flex: 1' : 'width: 100%'\"\r\n    (input)=\"this.onInput.emit(inp.value)\"\r\n    type=\"\"\r\n    #inp\r\n  />\r\n  <div class=\"input-invalid\" *ngIf=\"control?.invalid && control?.touched\">\r\n    <div>\r\n      <!-- {{ control?.errors | formErrorPipe: 'inputText' }} -->\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InputComponent } from './input.component';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\n\r\n@NgModule({\r\n  declarations: [InputComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputTextModule],\r\n  exports: [InputComponent],\r\n})\r\nexport class AlInputModule {}\r\n","/*\n * Public API Surface of ngx-git-visual\n */\n\nexport * from './lib/input/input.component';\nexport * from './lib/input/input.module';\n// export * from './lib/ngx-git-visual.component';\n// export * from './lib/ngx-git-visual.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["setCurrentInjector"],"mappings":"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"}